{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "starPrefab",
    "default",
    "type",
    "Prefab",
    "maxStarDuration",
    "minStarDuration",
    "ground",
    "Node",
    "player",
    "scoreDisplay",
    "Label",
    "scoreAudio",
    "url",
    "AudioClip",
    "gainScore",
    "score",
    "string",
    "toString",
    "audioEngine",
    "playEffect",
    "onLoad",
    "groundY",
    "y",
    "height",
    "timer",
    "starDuration",
    "spawnNewStar",
    "newStar",
    "instantiate",
    "node",
    "addChild",
    "setPosition",
    "getNewStarPosition",
    "getComponent",
    "game",
    "random0To1",
    "randX",
    "randY",
    "jumpHeight",
    "maxX",
    "width",
    "randomMinus1To1",
    "p",
    "gameOver",
    "stopAllActions",
    "director",
    "loadScene",
    "update",
    "dt"
  ],
  "mappings": ";;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,yBAAiB,CAPT;AAQRC,yBAAiB,CART;AASR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAVA;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAfA;AAmBRE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SAnBN;AAuBRC,oBAAY;AACRV,qBAAS,IADD;AAERW,iBAAKjB,GAAGkB;AAFA;AAvBJ,KAHP;;AAgCLC,eAAW,qBAAY;AACnB,aAAKC,KAAL,IAAc,CAAd;AACA;AACA,aAAKN,YAAL,CAAkBO,MAAlB,GAA2B,YAAY,KAAKD,KAAL,CAAWE,QAAX,EAAvC;AACA;AACAtB,WAAGuB,WAAH,CAAeC,UAAf,CAA0B,KAAKR,UAA/B,EAA2C,KAA3C;AACH,KAtCI;;AAyCL;AACAS,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKf,MAAL,CAAYgB,CAAZ,GAAgB,KAAKhB,MAAL,CAAYiB,MAAZ,GAAmB,CAAlD,CAFgB,CAEuC;AACvD;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA;AACA,aAAKC,YAAL;AACA;AACA,aAAKX,KAAL,GAAa,CAAb;AAEH,KArDI;;AAuDLW,kBAAc,wBAAW;AACrB;AACA,YAAIC,UAAUhC,GAAGiC,WAAH,CAAe,KAAK5B,UAApB,CAAd;AACA;AACA,aAAK6B,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACA;AACA,aAAKT,YAAL,GAAoB,KAAKpB,eAAL,GAAuBV,GAAGwC,UAAH,MAAmB,KAAK/B,eAAL,GAAuB,KAAKC,eAA/C,CAA3C;AACA,aAAKmB,KAAL,GAAa,CAAb;AACH,KAlEI;;AAoELQ,wBAAoB,8BAAY;AAC5B,YAAII,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKhB,OAAL,GAAe1B,GAAGwC,UAAH,KAAkB,KAAK3B,MAAL,CAAYyB,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAgB,CAA3B;AACAJ,gBAAQzC,GAAG8C,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAO5C,GAAG+C,CAAH,CAAKN,KAAL,EAAYC,KAAZ,CAAP;AACH,KA7EI;AA8ELM,cAAU,oBAAY;AAClB,aAAKnC,MAAL,CAAYoC,cAAZ,GADkB,CACY;AAC9BjD,WAAGkD,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH,KAjFI;AAkFL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA;AACA,YAAI,KAAKxB,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAChC,iBAAKkB,QAAL;AACA;AACH;AACD,aAAKnB,KAAL,IAAcwB,EAAd;AACH;AA3FI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // this property quotes the PreFab resource of stars\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // the random scale of disappearing time for stars\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // ground node for confirming the height of the generated star's position\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player node for obtaining the jump height of the main character and controlling the movement switch of the main character\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n    \n    gainScore: function () {\n        this.score += 1;\n        // update the words of the scoreDisplay Label\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        // play the scoring sound effect\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n\n    // use this for initialization\n    onLoad: function () {\n        // obtain the anchor point of ground level on the y axis\n        this.groundY = this.ground.y + this.ground.height/2;   // this.ground.top may also work\n        // initialize timer\n        this.timer = 0;\n        this.starDuration = 0;\n        // generate a new star\n        this.spawnNewStar();\n        // initialize scoring\n        this.score = 0;\n\n    },\n    \n    spawnNewStar: function() {\n        // generate a new node in the scene with a preset template\n        var newStar = cc.instantiate(this.starPrefab);\n        // put the newly added node under the Canvas node\n        this.node.addChild(newStar);\n        // set up a random position for the star\n        newStar.setPosition(this.getNewStarPosition());\n        newStar.getComponent('Star').game = this;\n        // reset timer, randomly choose a value according the scale of star duration\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // According to the position of the ground level and the main character's jump height, randomly obtain an anchor point of the star on the y axis\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\n        // according to the width of the screen, randomly obtain an anchor point of star on the x axis\n        var maxX = this.node.width/2;\n        randX = cc.randomMinus1To1() * maxX;\n        // return to the anchor point of the star\n        return cc.p(randX, randY);\n    },\n    gameOver: function () {\n        this.player.stopAllActions(); // stop the jumping action of the player node\n        cc.director.loadScene('game');\n    },\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        // update timer for each frame, when a new star is not generated after exceeding duration\n        // invoke the logic of game failure\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n});\n"
  ]
}